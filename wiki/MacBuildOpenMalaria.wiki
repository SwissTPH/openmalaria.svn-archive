#summary Brief build instructions for the mac.

= Dependencies =

This is similar to [UnixBuildOpenMalaria unix].

Additionally, you should install [http://python.org/download/ python 2.6] (just download and run the mac installer). Python 3.0 doesn't work at the moment.

= Backward compatibility =

In CMake you have to specify the older SDK version you would like to use to ensure backward compatibility.
Please beware of the fact that boinc won't be usable with SKDs < 10.3.9.

You have to use the flag CMAKE_OSX_SYSROOT to specify which SDK you would like to use.

= Building =

After checking out the sources, you have two options to build openmalaria (at least, two that have been tested):
 * Use Xcode (see below)
 * Use Makefiles (see the [UnixBuildOpenMalaria unix] page)

= Building static binaries =

For the static build, xerces needs to be linked with the Carbon Framework.
In CMake you can add extra Linker parameters using CMAKE_EXE_LINKER_FLAGS and adding *-framework Carbon*

You should have now properly compiling sources 


== Xcode ==

 * Run cmake-gui
  * set the source dir, and the build dir (suggested: SOURCE_DIR/build; if this doesn't exist cmake will ask if you want to create it)
  * Run configure. Set the build system to Xcode.
  * You either need to disable OM_CXXTEST_ENABLE or install [http://code.google.com/p/yaml-cpp/ yaml-cpp] for now (this may change)
  * Configure, and generate
 * From the build dir, open openmalaria.xcodeproj
  * First you need to build the xsdcxx target (select libxsdcxx.a as the active target; build).
  * Then you can build the rest with the ALL_BUILD target.
  * You can run the tests by building the RUN_TESTS target (currently doesn't appear to work).
 * If cmake regenerates the project for some reason, you need to reload it in Xcode. Sometimes it will ask you, *but sometimes it won't* (and you need to manually reload the project in xcode).