#summary Explanation of simulation phases and updates with respect to times

<wiki:toc max_depth="2" />


= Simulation phases =

The simulation has the following phases. They take place sequentially as ordered below.

== Set-up ==

At time *`t = 0`*, the human and (if using the vector model) mosquito populations are created.

== Warm-up ==

The simulation is run with enforced transmission until *`t = tWL`* (that is, the simulation's state at times *`t = 1`* up to and including *`t = tWL`* are calculated).

*`tWL`* is calculated to be:

 * at least as long as the human life span (*`maximumAgeYrs`* attribute of the scenario's `<demography>` element)
 * at least as long as the warmup length requested by the transmission model
 * a whole number of years

== Transmission initialization iteration ==

At this point, the transmission model's *`initIterate()`* method is called. This method reports either that the transmission model is sufficiently well initialized (in which case the next phase is immediately started) or gives a length of time to continue the simulation for before this method is called again.

In the [ModelTransmission#Non-vector_transmission non-vector model],  *`initIterate()`* prepares the model to switch to dynamic transmission mode (if enabled) and indicates the next phase should be started.

In the [XmlEntoVector vector transmission model], *`initIterate()`* checks whether or not the simulated EIR could significantly better reproduce the EIR requested in the scenario file or not. If so, it makes some adjustments and indicates the simulation should continue for six years before calling *`initIterate()`* again.  Once it is confirmed that the simulated EIR sufficiently approximates the requested EIR, tje simulator indicates the simulation should be run for another year to let mosquito parameters stabilize before indicating that the next phase, dynamic transmission, may begin.

In the event that the the model has attempted to initiate itself 10 times without success, the simulation exits with an error.

== Intervention period ==

Finally, the so called "intervention period" starts: the period during which interventions may be deployed and measurements of the simulation may be taken.

Only once the intervention periods starts are the constants *`tI₀`* and *`tEnd`* known for certain. At this point the *`tI`* time measure starts being useful.

= Timestep updates =

The state of the simulation is calculated iteratively: the state at time *`t`* depends on the state before, at time *`t-1`*.

To calculate the state at time *`t`*, the variables *`TimeStep::simulation`* and *`TimeStep::interventionPeriod`* are updated (to *`t`* and *`tI`*). If *`t = tI₀`*, then *`tI`* is set to 0 

(Note, the code does something slightly different, but the result is the same, since *`tI`* has no effect in Population::update1() when its value is less than 1). TODO - report what happens in the code

Next *`Population::update1`* is called to calculate the new state.

Any information from continuous and survey-based monitoring configured to happen at this time point *`tI`*  is captured.

Lastly, after the monitoring results are collected, any interventions configured for deployment at time *`tI`* (both timed and continuous for humans at their current age) are deployed.

== `Population::update1` ==

 * neonatal mortality is updated based on the previous time-step's patent hosts
 * the transmission model is updated based on previous infectiousness of humans
 * *`Human::update`* is called for each human
 * population age structure is maintained by out migration 
 * population size is maintained by adding newborns
 * transmission-specific summary statistics are updated

== `Human::update` ==

 
 * number of _P.f._ innoculations is calculated and new infections are  started
 * the parasite densities are of infected humans are updated. If the 1-day time step model is used, these densities may be modified by the drugs given to the patient
 * indirect deaths (neonatal and otherwise) occur
 * pathogenesis state is updated based on the new parasite densities (_i.e._, new illnesses start)
 * In the 5-day time-step model, diagnosis, medication and treatment occurs
 * infant death statistics are updated
 * infectiousness of human is calculated
 * Humans who reach the end of the human life span (see calculation of *`tWL`* above) die at the end of the timestep (after continuous and discrete survey measures are taken)

Note that effects of disease, diagnosis, and medication all occur based on the parasite density of the same time-step, whereas in the 1-day time-step models medications don't actually have an effect until the next time-step. 

In the 5-day time-step model if treatment is administered (and efficacious) it has immediate and complete effect, thus the presumably high parasite densities triggering the fever can never be recorded.

= Terminology =

|| variable || name in code || description ||
|| *`t`* || TimeStep::simulation || Timestep being updated or last complete (see [#Timestep_updates]) ||
|| *`tI`*|| TimeStep::interventionPeriod || Before the intervention period, *`tI`*<0; during this period *`tI = t + tI0`* ||
|| *`tWL`* || humanWarmupLength || Length of first phase and time of its end ||
|| *`tI₀`* || (none) || *`t`* at the start of the intervention period (only known when *`t  ≥ tI₀ `* ||
|| *`tEnd`* || (totalSimDuration) || Time at which the simulation ends (only known when *`t ≥ tI₀`* ||